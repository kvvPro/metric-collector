// Package server Code generated by swaggo/swag. DO NOT EDIT
package server

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "description": "Checking db connection",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "checks"
                ],
                "summary": "Checking db connection",
                "operationId": "checksPing",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update/": {
            "post": {
                "description": "Update existed metric or add new metric from JSON data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update metric, data in JSON",
                "operationId": "updateJSON",
                "parameters": [
                    {
                        "description": "Array of metrics",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/metrics.Metric"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid type or value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Missing name of metric",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Invalid request type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update/{type}/{name}/{value}": {
            "post": {
                "description": "Update existed metric or add new metric",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update existed metric or add new metric",
                "operationId": "update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metric name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Metric value",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid type or value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Missing name of metric",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Invalid request type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/updates/": {
            "post": {
                "description": "Update existed metric or add new metric from JSON array of metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Batch update array of metrics, data in JSON",
                "operationId": "updateBatch",
                "parameters": [
                    {
                        "description": "Array of metrics",
                        "name": "metrics",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/metrics.Metric"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid type or value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Missing name of metric",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Invalid request type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/value/": {
            "get": {
                "description": "Get metric value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getvalue"
                ],
                "summary": "Get metric value",
                "operationId": "getvalueJSON",
                "parameters": [
                    {
                        "description": "metric",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/metrics.Metric"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid type or value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Missing name of metric",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Invalid request type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/value/{type}/{name}": {
            "get": {
                "description": "Get all metrics with current values",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getvalue"
                ],
                "summary": "Get all metrics",
                "operationId": "getvalue",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Invalid request type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "metrics.Metric": {
            "type": "object",
            "properties": {
                "delta": {
                    "description": "значение метрики в случае передачи counter",
                    "type": "integer"
                },
                "id": {
                    "description": "имя метрики",
                    "type": "string"
                },
                "type": {
                    "description": "параметр, принимающий значение gauge или counter",
                    "type": "string"
                },
                "value": {
                    "description": "значение метрики в случае передачи gauge",
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
